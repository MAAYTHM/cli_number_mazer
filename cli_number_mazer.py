import random
from colorama import Fore, Back, init

# UPDATE POINTS : 
# # 1) Coloring Output
# # winner -> light magenta + light white
# # normal -> light_white
# # error -> light_red
# # commands -> yellow

def error_1(r):
    print(Fore.LIGHTRED_EX, ": Error -> Invalid Command -> '", end='')
    print(Fore.LIGHTWHITE_EX,f"{r}", end='')
    print(Fore.LIGHTRED_EX, "' :")
    init()
def sanitize(string):
    # Input Sanitizing
    counter = False
    string2 = ''
    for i in string:
        if counter:
            if i.isdigit() or i.isalpha():
                string2+=i
                counter = False
        elif i.isspace():
            counter = True
            string2+=i
        elif i.isdigit() or i.isalpha() or i in '!@#$%^&*()~':
            string2+=i
    string = string2
    if string[0].isspace(): string=string[1:]
    if string[len(string)-1].isspace(): string=string[:len(string)-1]
    
    if string.isdigit(): return int(string)
    else: return string

init()

############### INSTRUCTION MANUAL ####################
a = random.randint(1, 15)
b = random.randint(1, 10)
password = ((a*b)+(b-a))
info = Fore.LIGHTCYAN_EX + """
In This Game, U have to find out 'x' , which is a random number generated by 
this programme , 'x' will lie bw 1 and 10**z , 'z' is a number bw 3 and 6 depending
upon difficulty like -> Easy difficulty will have 'z'=4 and Hard Difficulty will
ave 'z'=6 etc.
"""
Manual = Fore.LIGHTBLACK_EX + f"""
: Hello xyz, Welcome In Instruction Manual of Numbers Mazer Application : 
\t : Here ,I will Explain How U can Play It , Lets Start:

{info}
"""+ Fore.LIGHTYELLOW_EX +"""
OK, that was basic steps that what to do in this game , 
Now I will tell u some more info about it like How winner will decide or etc..

"""+ Fore.LIGHTGREEN_EX +"""
1) How Winner will decide ? 
"""+ Fore.LIGHTMAGENTA_EX+"""-> Winner is that person who will find 'x' in less tries compare other all players, simple.
"""+ Fore.LIGHTGREEN_EX +"""
2) How many Game/Match modes here?
"""+ Fore.LIGHTYELLOW_EX+"""
-> 4 game modes : 
    a) Single PLayer , or u can say practice mode
    b) 1 vs PC , where u will compete with your own machine
    c) Multiplayer, where multiple players can play this game with u in your machine
    d) Multiplayer vs PC, where your own machine will also include in Multiplayer Competetion
"""+ Fore.LIGHTGREEN_EX +"""
3) Winning Funda ?
"""+ Fore.LIGHTMAGENTA_EX +"""
-> Just guess the number in tries as minimum as u can
"""+ Fore.LIGHTGREEN_EX +"""
4) How many difficulties?
"""+ Fore.LIGHTMAGENTA_EX +"""
-> 4 difficulties level , u can check that when the menu of game will appear 
by typing this command = 'set df'
"""+ Fore.LIGHTGREEN_EX +"""
5) How many tries a player will have?
"""+ Fore.LIGHTMAGENTA_EX +"""
-> INFINITE
"""+ Fore.LIGHTGREEN_EX +"""
6) What is the Password?
"""+ Fore.LIGHTMAGENTA_EX +"""
-> just solve this eq => """+ Fore.LIGHTWHITE_EX +f""" (({a}x{b})+({b}-{a}))
"""+ Fore.LIGHTRED_EX  +"""
\t\t AT LAST, HAVE FUN !!
"""
print(Fore.LIGHTWHITE_EX,Manual)

#### password field
chance = 3
unlock = False
while chance>0:
    print(Fore.LIGHTWHITE_EX,'Enter password to unlock application', Back.BLACK,Fore.LIGHTWHITE_EX, ': ' , Back.LIGHTWHITE_EX, Fore.BLACK, end='')
    ask = input('')
    if ask == '': continue
    ask = sanitize(ask) 
    print(Back.BLACK, end='')
    if type(ask) == int:
        if ask == password:
            print(Fore.LIGHTWHITE_EX,'\n\n\t\t$ Game is Unlocked $')
            unlock = True
            break
        else: print(Fore.LIGHTRED_EX,"Wrong Password")
    else: print(Fore.LIGHTRED_EX,"Wrong Password")
    chance-=1
    print(Fore.LIGHTRED_EX,f"'{chance}' Remaining, PLz solve eq => (({a}x{b})+({b}-{a})) correctly\n")
    
if unlock:
    print(Fore.LIGHTWHITE_EX,'\t: Welcome In Numbers Maze Game :')
    print(Fore.LIGHTWHITE_EX,": Type 'help' for info of available commands in this game :\n")
    highest_no = [10**4, 10**5, 10**6, 10**7]
    number_tofind = random.randint(1, 10**4)
    all_difficulties = ['Easy', 'Normal', 'Hard', 'Impossible']
    all_modes = ['Single Player', '1 vs PC', 'Multiplayer', 'Multiplayer vs PC']
    difficulty = "Normal"
    mode = "Single Player"
    nop = ['1']
    game_mode = 'off'
    done_game = [] # it will holds player index or name which has already done their chances
    game_over = False
    results = {'1': 0}
    summary = {'1': ''}

    while True:
        print(Fore.LIGHTWHITE_EX,'>>>', Fore.LIGHTGREEN_EX, end='')
        cmd = input('')
        if cmd == '': continue
        cmd = sanitize(cmd)    
        # print(f"# USER INPUT => '{cmd}' #")
        
        if cmd == 'help':
            print(Fore.LIGHTYELLOW_EX, '\n\t\t : Available Commands : \n')
            print(Fore.LIGHTWHITE_EX, "info", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "For information about how to play this game\n")
            print(Fore.LIGHTWHITE_EX, "set df", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "You can set difficulty level with this cmd") # done
            print('(default - NORMAL)\n')
            print(Fore.LIGHTWHITE_EX, 'reset df', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will reset difficulty level to default\n') # done
            print(Fore.LIGHTWHITE_EX, 'set mt', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'You can set Match mode through this cmd') # done
            print('(default - SINGLE PLAYER MODE)\n')
            print(Fore.LIGHTWHITE_EX, 'reset mt', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will reset match mode to default\n') # done
            print(Fore.LIGHTWHITE_EX, 'reset all', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will reset all settings to default\n') # done
            print(Fore.LIGHTWHITE_EX, 'showp (index / name of player)', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will show u an info about a particular player') # done 
            print(Fore.LIGHTWHITE_EX, 'show gs', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will show u whole game settings') # done
            print(Fore.LIGHTWHITE_EX, "show all", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will show the name/index of all players in this game ")
            print(Fore.LIGHTWHITE_EX, "result@(index/name of player)", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It tells the summary of that particular player related with game") # done
            print()
            print(Fore.LIGHTYELLOW_EX, " : If Match Mode include 'vs pc' then this cmds r available : ")
            print(Fore.LIGHTWHITE_EX, "start pc", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will start the PC's turns to play and then U can get Its Score\n") # done
            print(Fore.LIGHTWHITE_EX, "result@pc", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will Tell results/score of PC") # done
            print(Fore.LIGHTCYAN_EX, '** The Whole Summary will available once all player turns r done **')
            print()
            print(Fore.LIGHTYELLOW_EX, " : If Match Mode is 'SINGLE PLAYER' then : ")
            print(Fore.LIGHTWHITE_EX, "setp 1", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will allow u to set your name\n") # done
            print(Fore.LIGHTWHITE_EX, "start (1/name of player)", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will start your turn to play and score") # done
            print()
            print(Fore.LIGHTWHITE_EX, "setp (index/name of a player)", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will allow u to name a particular player") # done
            print("like -> 'set p 1' then Ennter name -> 'xyz' , then type 'show nop' to check changes made by upper example\n")
            print(Fore.LIGHTWHITE_EX, "start (index/name of player)", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will start turn of a particular player") # done
            print()
            print(Fore.LIGHTWHITE_EX, 'get no', Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, 'It will show u that number which was to be find in prev match of this game\n') # done
            print(Fore.LIGHTWHITE_EX, "quit", Fore.LIGHTGREEN_EX,"-", Fore.LIGHTBLACK_EX, "It will quit the whole program\n") # done
            print(Fore.LIGHTCYAN_EX, "*** Name should be in lowercase letters ***")
            print(Fore.LIGHTCYAN_EX, "*** Main Number ,which is to Find In This Game, will only be shown when every player turn is over ***")
            print(Fore.LIGHTCYAN_EX, "*** ONce Game is ON or Game Started ,then u will not able to reset or set anything ***")
            print(Fore.LIGHTCYAN_EX, '*** Name length Should be less than 15 char. ***\n')
            
        elif cmd == 'quit':
            # Quit CMD
            print(Back.LIGHTBLACK_EX, Fore.BLACK, ': Thanks For playing this game : ')
            print('Quiting ...')
            break
        
        elif cmd == 'info':
            print(info)
        
        elif 'start' in cmd:
            # Game Start CMD
            
            if len(cmd.split()) != 2:
                error_1(cmd)
                print()
                continue
            if cmd.split()[1] not in nop or cmd.split()[1].isspace():
                print(Fore.LIGHTRED_EX, ': Error -> Invalid Player Name/Index :\n')
                continue
            player_name = cmd.split()[1]
            if player_name in done_game:
                print(Fore.LIGHTRED_EX, ': Error -> Player already done its turn :')
                continue
            if player_name.isdigit():
                if player_name not in nop:
                    print(Fore.LIGHTRED_EX, ': Error -> Invalid Player Name/Index :\n')
                    continue
            
            print(Fore.LIGHTYELLOW_EX, ': Game Settings :')
            print(Fore.LIGHTWHITE_EX, f'MODE -> '+ Fore.LIGHTMAGENTA_EX +f'{mode}')
            print(Fore.LIGHTWHITE_EX, f'Difficulty -> '+ Fore.LIGHTMAGENTA_EX +f'{difficulty}')
            print(Fore.LIGHTWHITE_EX, f"Lowest number -> '1' and Highest number -> "+ Fore.LIGHTMAGENTA_EX +f"'{highest_no[all_difficulties.index(difficulty)]}'")
            print()
            print(Fore.LIGHTYELLOW_EX, ': Game Started :')
            done_game.append(player_name)
            game_mode = 'on'
            # # Game Main Code
            
            # : PC MODE :
            if player_name == 'pc' and (mode == '1 vs PC' or mode == 'Multiplayer vs PC'):
                n = highest_no[all_difficulties.index(difficulty)]
                pc_choice = random.randint(0, n)# randomely generated number by which i will going to find "x"
                x = number_tofind
                truth_ans = '' # in it i will get the answer as G / L / E
                less_than = pc_choice # 1st main element of the logic of the programme
                greater_than = pc_choice # 2nd main element
                tries = 0
                while True:
                    if truth_ans == "L":
                        pc_choice = random.randint(greater_than, less_than)
                        
                    elif truth_ans == "G":
                        pc_choice = random.randint(greater_than, less_than)
                    
                    if x > pc_choice:
                        truth_ans = 'G'
                        if pc_choice > greater_than:
                            greater_than = pc_choice
                        if tries == 0:
                            less_than = n
                        
                    elif x < pc_choice:
                        truth_ans = 'L'
                        if pc_choice < less_than:
                            less_than = pc_choice
                        if tries == 0:
                            greater_than = 1
                        
                    elif x == pc_choice:
                        results['pc'] = tries
                        summary['pc'] += f'''
                    '''+ Fore.LIGHTMAGENTA_EX  +'''try # '''+ Fore.LIGHTWHITE_EX +f'''{tries}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''pc_choice => '''+ Fore.LIGHTWHITE_EX  +f'''{pc_choice}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''greater_than => '''+ Fore.LIGHTWHITE_EX  +f'''{greater_than}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''less_than => '''+ Fore.LIGHTWHITE_EX  +f'''{less_than}
                        
                    '''+ Fore.LIGHTCYAN_EX +'''Found x(number to find) => '''+ Fore.LIGHTCYAN_EX +''', after '''+ Fore.LIGHTWHITE_EX +f'''{tries} '''+ Fore.LIGHTCYAN_EX +'''tries
                    \n'''
                        print(Fore.LIGHTCYAN_EX +'''Found x(number to find) => ''' + Fore.LIGHTCYAN_EX +''', after '''+ Fore.LIGHTWHITE_EX +f'''{tries} '''+ Fore.LIGHTCYAN_EX +'''tries''')
                        break
                    summary['pc'] += f'''
                    '''+ Fore.LIGHTMAGENTA_EX  +'''try # '''+ Fore.LIGHTWHITE_EX +f'''{tries}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''pc_choice => '''+ Fore.LIGHTWHITE_EX  +f'''{pc_choice}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''greater_than => '''+ Fore.LIGHTWHITE_EX  +f'''{greater_than}
                    '''+ Fore.LIGHTMAGENTA_EX  +'''less_than => '''+ Fore.LIGHTWHITE_EX  +f'''{less_than}
                    \n'''
                    tries += 1
            
            # : PERSON MODE :
            else:
                error_chances = 3
                error = False
                symbol = ''
                tries = 0
                while True:
                    tries += 1
                    print(Fore.LIGHTWHITE_EX, ">game>"+ Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTWHITE_EX +">>",Fore.LIGHTGREEN_EX, end='')
                    game_cmd = input('')
                    
                    if game_cmd == '':
                        continue
                    elif game_cmd == 'back':
                        summary[player_name] += f'''
                        
                        '''+ Fore.LIGHTRED_EX +f'''! {player_name} quited The game in middle !
                        ! {player_name} done total {tries} tries !\n
                        '''
                        print(Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTRED_EX +" quited The game in middle !!\n")
                        continue
                    else:
                        game_cmd = sanitize(game_cmd)
                        if type(game_cmd) != int:
                            print(Fore.LIGHTRED_EX + f"!! Error -> Invalid Input !!")
                            error_chances -= 1
                            if error_chances == 0:
                                error = True
                                break
                            else:
                                print(Fore.LIGHTRED_EX + f"!! Remaining Error_Chances -> "+ Fore.LIGHTWHITE_EX +f"{error_chances}"+ Fore.LIGHTRED_EX +" !!\n")
                                continue
                        else:
                            # Valid Game starts here
                            if game_cmd > number_tofind:
                                symbol = 'L'
                                summary[player_name] += '''
            !! "'''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}" '''+ Fore.LIGHTWHITE_EX +''' is greater than 'x' !!
            !! Try Some Smaller value !!\n
                                '''
                                print('''
            !! "'''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}" '''+ Fore.LIGHTWHITE_EX +''' is greater than 'x' !!
            !! Try Some Smaller value !!\n
                                      ''')
                            elif game_cmd < number_tofind:
                                symbol = 'G'
                                summary[player_name] += f'''
            !! "'''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}" '''+ Fore.LIGHTWHITE_EX +''' is lesser than 'x' !! 
            !! Try Some Bigger value !!\n
                                '''
                                print('''
            !! "'''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}" '''+ Fore.LIGHTWHITE_EX +''' is lesser than 'x' !! 
            !! Try Some Bigger value !!\n
                                      ''')
                            elif game_cmd == number_tofind:
                                symbol = 'E'
                                print("!! '" + Fore.LIGHTGREEN_EX + f"{game_cmd}"+ Fore.LIGHTWHITE_EX +"' is equal to 'x' !!")
                                print(f"!! Wow , You found 'x' which is "+ Fore.LIGHTGREEN_EX +f"{game_cmd}"+ Fore.LIGHTWHITE_EX +" , in "+ Fore.LIGHTGREEN_EX +f"{tries}"+ Fore.LIGHTWHITE_EX +" tries !!")
                                results[player_name] = tries
                                summary[player_name] += f'''
                                !! "'''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}"'''+ Fore.LIGHTWHITE_EX +''' is equal to 'x' !!
                                !! Wow , '''+ Fore.LIGHTCYAN_EX +f'''{player_name}'''+ Fore.LIGHTWHITE_EX +''' found 'x' which is '''+ Fore.LIGHTGREEN_EX +f'''{game_cmd}'''+ Fore.LIGHTWHITE_EX +''', in '''+ Fore.LIGHTGREEN_EX +f'''{tries}'''+ Fore.LIGHTWHITE_EX +''' tries !!
                                '''
                                break
                if error:
                    print(f"!! '"+ Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTRED_EX +"' causing continuous errors and thats why this turn is Finished here only !! \n")
                    continue
                
            nop.sort()
            done_game.sort()
            if nop == done_game:
                n = 10*100
                player_name = ''
                for i in results:
                    if results[i] < n:
                        n = results[i]
                        player_name = i
                print(Fore.LIGHTYELLOW_EX + f"\n\n **** Hooray , Game Is Over and \nThe Winner is '"+ Fore.LIGHTCYAN_EX +f"{player_name.upper()}"+ Fore.LIGHTYELLOW_EX +"' who crack the x("+ Fore.LIGHTWHITE_EX +f"{number_tofind}"+ Fore.LIGHTYELLOW_EX +") in "+ Fore.LIGHTWHITE_EX +f"{n}"+ Fore.LIGHTYELLOW_EX +" tries ****\n\n")
                game_over = True
                game_mode = 'off'
                
        elif cmd == 'set df':
            # Set Difficulty Level
            
            if game_mode == 'on':
                print(Fore.LIGHTRED_EX + " Oops, Sorry Game is Started, You cannt change Set anything \n")
                continue
            print(Fore.LIGHTWHITE_EX + ': Choose Difficulty level (via their index numbers) : ')
            for i in range(len(all_difficulties)):
                    print(f'{i+1}) {all_difficulties[i]}')
            print()
            
            while True:
                print(Fore.LIGHTWHITE_EX + ">df>>>" + Fore.LIGHTGREEN_EX, end='')
                cmd_df = input('')
                if cmd_df == '': continue
                else: break
            cmd_df = sanitize(cmd_df)
            if type(cmd_df) != int:
                error_1(cmd_df)
                continue
            
            if cmd_df <= len(all_difficulties):
                difficulty = all_difficulties[cmd_df-1]
                number_tofind = random.randint(1, highest_no[cmd_df-1])
                print(Fore.LIGHTWHITE_EX + f"Difficulty level -> "+ Fore.LIGHTYELLOW_EX +f"{difficulty}")
                print(Fore.LIGHTMAGENTA_EX +'!! All Set Correctly !! \n')
            else:
                print(Fore.LIGHTRED_EX + '!! Choose difficulty from their index numbers !! ')
                error_1(cmd_df)
                continue
                
        elif cmd == 'set mt':
            # Set Match / Game mode 
            
            if game_mode == 'on':
                print(Fore.LIGHTRED_EX + " Oops, Sorry Game is Started, You cannt change/Set anything \n")
                continue
            print(Fore.LIGHTWHITE_EX + ': Choose Game Mode (via their index numbers) : ')
            for i in range(len(all_modes)):
                    print(f'{i+1}) {all_modes[i]}')
            print()
            
            while True:
                print(Fore.LIGHTWHITE_EX + ">mt>>>" + Fore.LIGHTGREEN_EX, end='')
                cmd_mt = input('')
                if cmd_mt == '': continue
                else: break
                
            cmd_mt = sanitize(cmd_mt)
            if type(cmd_mt) != int:
                error_1(cmd_mt)
                continue
            
            if cmd_mt <= len(all_modes):
                mode = all_modes[cmd_mt-1]
                correct = False
                print(Fore.LIGHTWHITE_EX +"Game Mode -> "+ Fore.LIGHTYELLOW_EX +f"{mode}")
                if mode == all_modes[1]: # 1 vs pc
                    nop.append('pc')
                    results['pc'] = 0
                    summary['pc'] = ''
                    correct = True
                elif mode == all_modes[2] or mode == all_modes[3]: # Multiplayer or Multiplayer vs pc
                    chances, error, c_error = 2, False, False
                    while chances != 0:
                        try:
                            while True:
                                print(Fore.LIGHTWHITE_EX + ' Enter no. of Total Players => ' + Fore.LIGHTGREEN_EX, end='')
                                no_of_players = int(input(''))
                                if no_of_players == '': continue
                                else:
                                    no_of_players = sanitize(no_of_players)
                                    if type(no_of_players) == int: break
                                    else: continue
                                
                            if no_of_players < 1: c_error = True
                            else:
                                nop = []
                                for i in range(no_of_players):
                                    nop.append(str(i+1))
                                    results[str(i)] = 0
                                    summary[str(i)] = ''
                                break
                        except Exception as e:
                            del e
                            c_error = True
                        if c_error == True:
                            chances -= 1
                            if chances == 0: error = True
                            print(Fore.LIGHTRED_EX + f" ! left "+ Fore.LIGHTWHITE_EX +f"{chances}"+ Fore.LIGHTRED_EX +" chance to give input correctly ! ")
                            error_1(no_of_players)
                    if error:
                        print(Fore.LIGHTRED_EX +' As Due to Continuously Errors , Match Mode is setted to its default mode')
                        mode = all_modes[0]
                        print(Fore.LIGHTWHITE_EX + 'Game mode -> '+ Fore.LIGHTRED_EX +f'{mode}\n')
                    elif mode == all_modes[3]:
                        nop.append('pc')
                        results['pc'] = 0
                        summary['pc'] = ''
                    correct = True
                    
                if correct or mode == all_modes[0]:
                    print(Fore.LIGHTMAGENTA_EX + '!! Mode Setted Correctly !! \n')
            else:
                print(Fore.LIGHTRED_EX + '!! Error -> Wrong Index Number !!\n')
                continue
            
        elif 'reset' in cmd:
            # Reset Func for Game
            
            if cmd.split()[1] not in ['mt', 'df', 'all']:
                error_1(cmd)
                continue
            if game_mode == 'on':
                print(Fore.LIGHTRED_EX + " Oops, Sorry Game is Started, You cannt change reset anything \n")
                continue
            if cmd.split()[1] == 'mt' or cmd.split()[1] == 'all':
                mode = "Single Player"
            if cmd.split()[1] == 'df' or cmd.split()[1] == 'all':
                difficulty = "Normal"
            if cmd.split()[1] == 'all':
                number_tofind = random.randint(1, 10**3)
                nop = ['1']
                done_game = []
                game_mode = 'off'
            print(Fore.LIGHTMAGENTA_EX + '!! Reset Func done Successfully !!\n')
        
        elif 'showp' in cmd:
            # Player Details
            
            if len(cmd.split()) != 2:
                error_1(cmd)
                continue
            player_name = cmd.split()[1]
            if player_name not in nop:
                print(Fore.LIGHTRED_EX + " !! Error -> No Player Found with the name '"+ Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTRED_EX +"' !! \n")
                continue
            print(Fore.LIGHTYELLOW_EX + '\t: PLAYER INFO :')
            print(Fore.LIGHTWHITE_EX + f"Player Index / Name -> "+ Fore.LIGHTCYAN_EX +f"{player_name}")
            if player_name in done_game: print(Fore.LIGHTWHITE_EX + "Is Player finished his turn -> '"+ Fore.LIGHTCYAN_EX +"YES"+ Fore.LIGHTWHITE_EX +"'")
            else: print(Fore.LIGHTWHITE_EX + "Is Player finished his turn -> '"+ Fore.LIGHTCYAN_EX +"NO"+ Fore.LIGHTWHITE_EX +"'\n")
        
        elif cmd == 'show gs':
            # Show Game Settings
            print(Fore.LIGHTYELLOW_EX + '\t: Game Settings : ')
            print(Fore.LIGHTWHITE_EX + f' Game Mode -> '+ Fore.LIGHTMAGENTA_EX +f'{mode} ')
            print(Fore.LIGHTWHITE_EX + f' Game Difficulty -> '+ Fore.LIGHTMAGENTA_EX +f'{difficulty} ')
            print(Fore.LIGHTWHITE_EX + f' Game Total Members / PLayers -> '+ Fore.LIGHTMAGENTA_EX +f'{len(nop)} \n')
            
        elif 'setp' in cmd:
            # Set player new name
            
            if len(cmd.split()) != 2:
                error_1(cmd)
                continue
            player_name = cmd.split()[1]
            if player_name.lower() not in nop or player_name.lower() == 'pc':
                print(Fore.LIGHTRED_EX + " !! Error -> No player Found with it or Pc's name cannt be setted !! \n")
                continue
            chances, error = 2, False
            while chances != 0:
                print(Fore.LIGHTWHITE_EX + "\nEnter name :- ", Fore.LIGHTGREEN_EX, end='')
                name = input('')
                if name == '': continue
                name = name.lower()
                name = sanitize(name)
                if name not in nop and len(name) <= 15 and name != player_name:
                    nop[nop.index(player_name)] = name
                    results[name] = results[player_name]
                    summary[name] = summary[player_name]
                    del results[player_name]
                    del summary[player_name]
                    print(Fore.LIGHTMAGENTA_EX + "!! Name Setted Correctly !!")
                    break
                elif len(name) > 15:
                    print(Fore.LIGHTRED_EX + '!! Oops, name length is too high !!')
                elif name == player_name:
                    print(Fore.LIGHTRED_EX + '!! Oops Same Name !!')
                elif name == 'pc' and (mode == '1 vs PC' or mode == 'Multiplayer vs PC'):
                    print(Fore.LIGHTRED_EX + '!! Oops, Cannt Take this name !!')
                else:
                    print(Fore.LIGHTRED_EX + '!! Oops, name already taken !!')
                chances -= 1
                if chances == 0: error = True
                else: print(Fore.LIGHTRED_EX + f' !! Only '+ Fore.LIGHTWHITE_EX +f'{chances}'+ Fore.LIGHTRED_EX +' left to write name correctly !! \n')
            
            if error:
                name = player_name
                print(Fore.LIGHTRED_EX + 'As Name is not setted Correctly, It is setted to Prev name')
            print(Fore.LIGHTWHITE_EX + f"Name of '"+ Fore.LIGHTCYAN_EX +f"{player_name}'"+ Fore.LIGHTWHITE_EX +" now is -> '"+ Fore.LIGHTCYAN_EX +f"{name}"+ Fore.LIGHTWHITE_EX +"'\n")
            
        elif cmd == "get no":
            if not game_over:
                print(Fore.LIGHTRED_EX + '!! Oops , Game Not Over Yet !!\n')
                continue
            print(Fore.LIGHTWHITE_EX + "Prev Game Number -> '"+ Fore.LIGHTYELLOW_EX +f"{number_tofind}"+ Fore.LIGHTWHITE_EX +"'")
        
        elif 'result@' in cmd:
            if len(cmd.split('@')) == 2:
                player_name = cmd.split('@')[1]
                if player_name in nop:
                    if player_name in done_game:
                        if game_over:
                            print(summary[player_name], '\n')
                        else:
                            print(f" '{player_name}' found 'x' in {results[player_name]} tries \n")
                    else:
                        print(Fore.LIGHTRED_EX + f"!! Error -> '"+ Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTRED_EX +"' not done his/her turn yet  !!\n")
                        continue
                else:
                    print(Fore.LIGHTRED_EX + f"!! Error -> No Player found with name '"+ Fore.LIGHTCYAN_EX +f"{player_name}"+ Fore.LIGHTRED_EX +"' !! \n")
                    continue
            else:
                error_1(cmd)
                continue
        
        elif cmd == 'show all':
            counter = 0
            skipper = 1
            complete = False
            while True:
                while counter != (10*skipper):
                    try:
                        if (counter%2) == 0:
                            print(Fore.LIGHTYELLOW_EX + nop[counter])
                        else:
                            print(Fore.LIGHTMAGENTA_EX + nop[counter])
                    except Exception as e:
                        del e
                        complete = True
                        break
                    counter+=1
                if not complete:
                    while True:
                        print(Fore.LIGHTWHITE_EX + "Want more names/indexes (y/n)(n->by default) ? " + Fore.LIGHTGREEN_EX, end='')
                        ask2 = input("")
                        if name != '': break
                    if ask2 == 'n' or ask2 == '':
                        break
                else:
                    break
                skipper+=1
        
        else:
            error_1(cmd)

else:
    print(Fore.LIGHTRED_EX + '\n\n\t\t !!! Sorry , Try again ,by running application again ,!!!\n')
